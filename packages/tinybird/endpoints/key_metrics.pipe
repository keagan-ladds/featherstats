INCLUDE "../includes/analytics_sessions_filtered.incl"

NODE timeseries
SQL >

    %
        {% set _single_day = defined(date_from) and day_diff(date_from, date_to) == 0 %}
        with
            {% if defined(date_from) %}
                toStartOfDay(
                    toDate(
                        {{
                            Date(
                                date_from,
                                description="Starting day for filtering a date range",
                                required=False,
                            )
                        }}
                    )
                , {{String(timezone, 'Europe/Amsterdam')}}) as start,
            {% else %} toStartOfDay(timestampAdd(today(), interval -7 day)) as start,
            {% end %}
            {% if defined(date_to) %}
                toStartOfDay(
                    toDate(
                        {{
                            Date(
                                date_to,
                                description="Finishing day for filtering a date range",
                                required=False,
                            )
                        }}
                    , {{String(timezone, 'Europe/Amsterdam')}})
                ) as end
            {% else %} toStartOfDay(today()) as end
            {% end %}
        {% if _single_day %}
            select
                arrayJoin(
                    arrayMap(
                        x -> toTimezone(toDateTime(x), {{String(timezone, 'Europe/Amsterdam')}}),
                        range(
                            toUInt32(toTimezone(toDateTime(start), {{String(timezone, 'Europe/Amsterdam')}})), toUInt32(timestampAdd(end, interval 1 day)), 3600
                        )
                    )
                ) as date
        {% else %}
            select
                arrayJoin(
                    arrayMap(
                        x -> toDate(x),
                        range(toUInt32(start), toUInt32(timestampAdd(end, interval 1 day)), 24 * 3600)
                    )
                ) as date
        {% end %}
    
      -- where date <= now()




NODE hits
SQL >

    %
        {% if defined(date_from) and day_diff(date_from, date_to) == 0 %}
            select
                toStartOfHour(timestamp, {{String(timezone, 'Europe/Amsterdam')}}) as date,
                session_id,
                uniq(session_id) as visits,
                count() as pageviews,
                case when min(timestamp) = max(timestamp) then 1 else 0 end as is_bounce,
                max(timestamp) as latest_hit_aux,
                min(timestamp) as first_hit_aux
            from analytics_hits
            where toDate(date) = {{ Date(date_from) }} 
                and workspace_id = {{String(workspace_id, required=True)}} 
                and domain_name = {{String(domain_name, required=True)}}
            group by date, session_id
        {% else %}
            select
                date,
                session_id,
                uniq(session_id) as visits,
                countMerge(hits) as pageviews,
                case when min(first_hit) = max(latest_hit) then 1 else 0 end as is_bounce,
                max(latest_hit) as latest_hit_aux,
                min(first_hit) as first_hit_aux
            from analytics_sessions_filtered
            group by date, session_id
        {% end %}
    
        order by date desc



NODE aggregate
SQL >

    select
            date,
            uniq(session_id) as visits,
            sum(pageviews) as pageviews,
            sum(is_bounce) / visits as bounce_rate,
            avg(latest_hit_aux - first_hit_aux) as avg_session_sec
        from hits
        group by date



NODE endpoint
SQL >

    select a.date, b.visits, b.pageviews, b.bounce_rate, b.avg_session_sec
    from timeseries a
    left join aggregate b using date



NODE key_metrics_4
SQL >

    SELECT * FROM endpoint


